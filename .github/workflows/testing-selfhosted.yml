name: Testing (self-hosted)

on:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number }}-${{ contains(github.event.comment.body, '/run standalone') || contains(github.event.comment.body, '/run all') }}-${{ contains(github.event.comment.body, '/run cmssw') || contains(github.event.comment.body, '/run all') }}-${{ contains(github.event.comment.body, 'lowpt') }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  standalone-selfhosted:
    if: >
      github.event.issue.pull_request &&
      (contains(github.event.comment.body, '/run gpu-standalone') || contains(github.event.comment.body, '/run gpu-all')) &&
      ( github.event.comment.user.login == 'ariostas' ||
        github.event.comment.user.login == 'GNiendorf' ||
        github.event.comment.user.login == 'YonsiG' ||
        github.event.comment.user.login == 'VourMa' ||
        github.event.comment.user.login == 'aashayarora' ||
        github.event.comment.user.login == 'bucket420' ||
        github.event.comment.user.login == 'jchismar' ||
        github.event.comment.user.login == 'kk428' ||
        github.event.comment.user.login == 'mmasciov' ||
        github.event.comment.user.login == 'pwittich' ||
        github.event.comment.user.login == 'sgnoohc' ||
        github.event.comment.user.login == 'slava77devel' ||
        github.event.comment.user.login == 'slava77'
      )
    runs-on: self-hosted
    steps:
      - name: Clean the workspace
        run: rm -rf ./*
      - name: Check out PR
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head
          sparse-checkout: |
            RecoTracker/LST
            RecoTracker/LSTCore
            Configuration/ProcessModifiers
            RecoTracker/ConversionSeedGenerators
            RecoTracker/FinalTrackSelectors
            RecoTracker/IterativeTracking
            HeterogeneousCore/AlpakaInterface
            HeterogeneousCore/AlpakaMath
            DataFormats/Portable
      - name: Get commit SHA
        run: |
          sha=$(git rev-parse HEAD)
          echo "COMMIT_SHA=$sha" >> $GITHUB_ENV
      - name: Create App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          skip-token-revoke: true
      - name: Create in progress check
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ steps.app-token.outputs.token }}
          sha: ${{ env.COMMIT_SHA }}
          name: Run Standalone PU200${{ contains(github.event.comment.body, 'lowpt') && ' (low pT setup)' || '' }} on GPU
          status: in_progress
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          output: |
            {"title": "This check has started...", "summary": "The logs can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."}
      - name: Build and run PR
        timeout-minutes: 60
        id: build-and-run
        uses: SegmentLinking/TrackLooper-actions/standalone-selfhosted@cmssw
        with:
          pr-number: ${{ github.event.issue.number }}
          low-pt: ${{ contains(github.event.comment.body, 'lowpt') && 'true' || 'false' }}
      - name: Upload plots to archival repo
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@github.com:${{ steps.build-and-run.outputs.archive-repo }}.git
          BRANCH: ${{ steps.build-and-run.outputs.archive-branch }}
          FOLDER: ${{ steps.build-and-run.outputs.archive-dir }}
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          TARGET_DIR: ${{ steps.build-and-run.outputs.archive-dir }}
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{ steps.build-and-run.outputs.comment }}`
            })
      - name: Comment on PR if job failed.
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `There was a problem while building and running in standalone mode on GPU. The logs can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).`
            })
      - name: Create App Token
        if: always()
        uses: actions/create-github-app-token@v1
        id: app-token-end
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Create completed check
        uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ steps.app-token-end.outputs.token }}
          sha: ${{ env.COMMIT_SHA }}
          name: Run Standalone PU200${{ contains(github.event.comment.body, 'lowpt') && ' (low pT setup)' || '' }} on GPU
          conclusion: ${{ job.status }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          output: |
            {"title": "Status: ${{ job.status }}", "summary": "The logs can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."}

  cmssw-selfhosted:
    if: >
      github.event.issue.pull_request &&
      (contains(github.event.comment.body, '/run gpu-cmssw') || contains(github.event.comment.body, '/run gpu-all')) &&
      ( github.event.comment.user.login == 'ariostas' ||
        github.event.comment.user.login == 'GNiendorf' ||
        github.event.comment.user.login == 'YonsiG' ||
        github.event.comment.user.login == 'VourMa' ||
        github.event.comment.user.login == 'aashayarora' ||
        github.event.comment.user.login == 'bucket420' ||
        github.event.comment.user.login == 'jchismar' ||
        github.event.comment.user.login == 'kk428' ||
        github.event.comment.user.login == 'Hoobidoobidoo' ||
        github.event.comment.user.login == 'mmasciov' ||
        github.event.comment.user.login == 'pwittich' ||
        github.event.comment.user.login == 'sgnoohc' ||
        github.event.comment.user.login == 'slava77devel' ||
        github.event.comment.user.login == 'slava77'
      )
    runs-on: self-hosted
    steps:
      - name: Clean the workspace
        run: rm -rf ./*
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head
      - name: Get commit SHA
        run: |
          sha=$(git rev-parse HEAD)
          echo "COMMIT_SHA=$sha" >> $GITHUB_ENV
      - name: Create App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          skip-token-revoke: true
      - name: Create in progress check
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ steps.app-token.outputs.token }}
          sha: ${{ env.COMMIT_SHA }}
          name: Run CMSSW 29834.1${{ contains(github.event.comment.body, 'lowpt') && ' (low pT setup)' || '' }} on GPU
          status: in_progress
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          output: |
            {"title": "This check has started...", "summary": "The logs can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."}
      - name: Build and run PR
        timeout-minutes: 200
        id: build-and-run
        uses: SegmentLinking/TrackLooper-actions/cmssw-selfhosted@cmssw
        with:
          pr-number: ${{ github.event.issue.number }}
          low-pt: ${{ contains(github.event.comment.body, 'lowpt') && 'true' || 'false' }}
      - name: Upload plots to archival repo
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@github.com:${{ steps.build-and-run.outputs.archive-repo }}.git
          BRANCH: ${{ steps.build-and-run.outputs.archive-branch }}
          FOLDER: ${{ steps.build-and-run.outputs.archive-dir }}
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          TARGET_DIR: ${{ steps.build-and-run.outputs.archive-dir }}
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{ steps.build-and-run.outputs.comment }}`
            })
      - name: Comment on PR if job failed.
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `There was a problem while building and running with CMSSW on GPU. The logs can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).`
            })
      - name: Create App Token
        if: always()
        uses: actions/create-github-app-token@v1
        id: app-token-end
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Create completed check
        uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ steps.app-token-end.outputs.token }}
          sha: ${{ env.COMMIT_SHA }}
          name: Run CMSSW 29834.1${{ contains(github.event.comment.body, 'lowpt') && ' (low pT setup)' || '' }} on GPU
          conclusion: ${{ job.status }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          output: |
            {"title": "Status: ${{ job.status }}", "summary": "The logs can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."}
